// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "pblogin/pblogin.proto" (package "pblogin", syntax proto3)
// tslint:disable
import { CommonResult } from "../pbcommon/pbcommon";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message pblogin.AdminLoginArgs
 */
export interface AdminLoginArgs {
    /**
     * @generated from protobuf field: int64 appId = 1;
     */
    appId: bigint;
    /**
     * @generated from protobuf field: string username = 2;
     */
    username: string;
    /**
     * @generated from protobuf field: string password = 3;
     */
    password: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class AdminLoginArgs$Type extends MessageType<AdminLoginArgs> {
    constructor() {
        super("pblogin.AdminLoginArgs", [
            { no: 1, name: "appId", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "username", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "password", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<AdminLoginArgs>): AdminLoginArgs {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.appId = 0n;
        message.username = "";
        message.password = "";
        if (value !== undefined)
            reflectionMergePartial<AdminLoginArgs>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AdminLoginArgs): AdminLoginArgs {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 appId */ 1:
                    message.appId = reader.int64().toBigInt();
                    break;
                case /* string username */ 2:
                    message.username = reader.string();
                    break;
                case /* string password */ 3:
                    message.password = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AdminLoginArgs, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 appId = 1; */
        if (message.appId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.appId);
        /* string username = 2; */
        if (message.username !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.username);
        /* string password = 3; */
        if (message.password !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.password);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pblogin.AdminLoginArgs
 */
export const AdminLoginArgs = new AdminLoginArgs$Type();
/**
 * @generated ServiceType for protobuf service pblogin.Login
 */
export const Login = new ServiceType("pblogin.Login", [
    { name: "AdminLogin", options: {}, I: AdminLoginArgs, O: CommonResult }
]);
